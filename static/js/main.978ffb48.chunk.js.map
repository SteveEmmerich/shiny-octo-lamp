{"version":3,"sources":["Icon/index.js","state/utils.js","state/actions.js","state/reducers.js","state/context.provider.jsx","components/npri.component.jsx","components/mineralInterest.component.jsx","EditTractOwnership/index.js","components/errorBounds.component.jsx","App.js","serviceWorker.js","index.js"],"names":["library","add","faLevelUpAlt","faMinusCircle","faPlus","faSmile","initialState","handlers","Icon","iconProps","icon","rotation","fixedWidth","size","getIconProps","createAction","actionType","payload","type","withLogger","dispatch","action","console","groupCollapsed","log","ADD_MI_TYPE","add_mi","UPDATE_MI_TYPE","update_mi","DELETE_MI_TYPE","delete_mi","ADD_NPRI_TYPE","add_npri","UPDATE_NPRI_TYPE","update_npri","DELETE_NPRI_TYPE","delete_npri","SET_STATE_TYPE","set_state","reducers","Actions","state","id","uuidv4","changes","map","mi","_","filter","data","npris","push","miId","idx","findIndex","npri","newNPRI","undefined","hasOwnProperty","TractStateContext","createContext","TractDispatchContext","TractProvider","children","args","preState","useRef","useReducer","dispatchWithLogger","useMemo","useEffect","current","groupEnd","useReducerWithLogger","Provider","value","useTractState","context","useContext","Error","useTractDispatch","useTract","Npri","props","values","onChange","npriValues","updateNpri","e","npriId","preventDefault","target","Form","Group","data-testid","as","Row","controlId","Col","InputGroup","Prepend","Control","owner","interest","Append","Text","xs","Button","onClick","remove","variant","MineralInterest","JSON","stringify","miValues","updateMi","lease","AddNPRI","RenderNPRIChildren","key","RenderTracts","tracts","tract","EditTractOwnership","Container","Dropdown","Divider","ErrorBoundary","hasError","error","errorInfo","this","React","Component","tractOwnerships","withProvider","WrappedComponent","Jumbotron","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.978ffb48.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faLevelUpAlt,\n  faMinusCircle,\n  faPlus,\n  faSmile,\n} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faLevelUpAlt, faMinusCircle, faPlus, faSmile);\n\nconst getIconProps = icon => {\n  switch (icon) {\n    case 'add':\n      return {\n        icon: 'plus',\n      };\n    case 'indent':\n      return {\n        icon: 'level-up-alt',\n        rotation: 90,\n        fixedWidth: true,\n        size: 'sm',\n      };\n    case 'remove':\n      return {\n        icon: 'minus-circle',\n      };\n    case 'smile':\n      return {\n        icon: 'smile',\n      };\n    default:\n      return {};\n  }\n};\n\nconst Icon = ({ icon }) => {\n  const iconProps = getIconProps(icon);\n\n  return <FontAwesomeIcon {...iconProps} />;\n};\n\nexport default Icon;\n","import { useRef, useReducer, useMemo, useEffect } from 'react';\n\n// Helper for creating reducers\nconst createReducer = (initialState, handlers) => {\n  return (state, action) => {\n    // Inline if :(\n    if (state === undefined) state = initialState;\n\n    if (handlers.hasOwnProperty(action.type)) {\n      return handlers[action.type](state, action);\n    } else {\n      return state;\n    }\n  };\n};\n\n// Helper for creating actions.\nconst createAction = actionType => {\n  return [\n    actionType,\n    payload => {\n      return {\n        type: actionType,\n        payload,\n      };\n    },\n  ];\n};\n\n// Wraps our errors in a message and exception\nconst errorLogger = (msg, handleThrow = true) => {\n  console.error(msg);\n  if (handleThrow) {\n    throw new Error(msg);\n  }\n};\n\n// HOC/Meta reducer for action logger\nconst withLogger = dispatch => {\n  return action => {\n    console.groupCollapsed(`Action Dispatched:`, action.type);\n    console.log('Action Payload: ', action.payload);\n    return dispatch(action);\n  };\n};\n\n// Wrapped reducer with a logger and new dispatch function\nconst useReducerWithLogger = (...args) => {\n  const { initialState } = args;\n  let preState = useRef(initialState);\n  const [state, dispatch] = useReducer(...args);\n  const dispatchWithLogger = useMemo(() => {\n    return withLogger(dispatch);\n  }, [dispatch]);\n\n  // Log every time the state changes\n  useEffect(() => {\n    if (state !== initialState) {\n      console.log(`Previous State:`, preState.current);\n      console.log(`Next State:`, state);\n      console.groupEnd();\n    }\n    preState.current = state;\n  }, [initialState, state]);\n\n  return [state, dispatchWithLogger];\n};\n\nexport { createAction, createReducer, errorLogger, useReducerWithLogger };\n","import { createAction } from './utils';\n\n// Mineral Intrest actions\nconst [ADD_MI_TYPE, add_mi] = createAction('ADD_MI');\nconst [UPDATE_MI_TYPE, update_mi] = createAction('UPDATE_MI');\nconst [DELETE_MI_TYPE, delete_mi] = createAction('DELETE_MI');\n\n// NPRI actions\nconst [ADD_NPRI_TYPE, add_npri] = createAction('ADD_NRPI');\nconst [UPDATE_NPRI_TYPE, update_npri] = createAction('UPDATE_NPRI');\nconst [DELETE_NPRI_TYPE, delete_npri] = createAction('DELETE_NPRI');\n\n// Repalces state if needed\nconst [SET_STATE_TYPE, set_state] = createAction('SET_STATE');\n\nexport {\n  SET_STATE_TYPE,\n  ADD_MI_TYPE,\n  UPDATE_MI_TYPE,\n  DELETE_MI_TYPE,\n  ADD_NPRI_TYPE,\n  UPDATE_NPRI_TYPE,\n  DELETE_NPRI_TYPE,\n  set_state,\n  add_mi,\n  update_mi,\n  delete_mi,\n  add_npri,\n  update_npri,\n  delete_npri,\n};\n","import { createReducer } from './utils.js';\nimport uuidv4 from 'uuid';\nimport * as Actions from './actions';\n\nconst initialState = [];\n\n// Build our reducers\nconst reducers = createReducer(initialState, {\n  [Actions.ADD_MI_TYPE]: (state, action) => {\n    // Very simple add one to new array\n    return [...state, { id: uuidv4(), ...action.payload }];\n  },\n\n  [Actions.UPDATE_MI_TYPE]: (state, action) => {\n    // First find the MI to update,\n    // We are assuming that the array will never change order\n    const { id, changes } = action.payload;\n\n    // Option: get index in the array and replace it\n\n    // Loop through and update the wanted minernal interest\n    return state.map(mi => {\n      if (mi.id === id) {\n        return { ...mi, ...changes };\n      }\n      return mi;\n    });\n  },\n  [Actions.SET_STATE_TYPE]: (_, action) => {\n    return action.payload;\n  },\n  [Actions.DELETE_MI_TYPE]: (state, action) => {\n    const id = action.payload;\n    // Filter returns a new array\n    const newState = state.filter(mi => mi.id !== id);\n    return newState;\n  },\n\n  [Actions.ADD_NPRI_TYPE]: (state, action) => {\n    const { id, data } = action.payload;\n    return state.map(mi => {\n      if (mi.id === id) {\n        mi.npris.push({\n          id: uuidv4(),\n          ...data,\n        });\n      }\n      return mi;\n    });\n  },\n\n  [Actions.UPDATE_NPRI_TYPE]: (state, action) => {\n    const { miId, id, changes } = action.payload;\n\n    return state.map(mi => {\n      if (mi.id === miId) {\n        const idx = mi.npris.findIndex(npri => npri.id === id);\n        if (idx !== -1) {\n          const newNPRI = { ...mi.npris[idx], ...changes };\n\n          mi.npris[idx] = newNPRI;\n        }\n      }\n      return mi;\n    });\n  },\n  [Actions.DELETE_NPRI_TYPE]: (state, action) => {\n    const { miId, id } = action.payload;\n\n    const newState = state.map(mi => {\n      if (mi.id === miId) {\n        mi.npris = mi.npris.filter(npri => npri.id !== id);\n      }\n      return mi;\n    });\n    return newState;\n  },\n});\n\nexport { reducers, initialState };\n","import React, { createContext, useContext } from 'react';\n\nimport { reducers, initialState } from './reducers';\nimport { useReducerWithLogger } from './utils';\n\n// Create a context to track state, and one for dispatch\nconst TractStateContext = createContext();\nconst TractDispatchContext = createContext();\n\n// Tract provider will give our components state\nconst TractProvider = ({ children }) => {\n  // Fuax redux\n  const [state, dispatch] = useReducerWithLogger(reducers, initialState);\n\n  // Wrap anything in our providers\n  return (\n    <TractStateContext.Provider value={state}>\n      <TractDispatchContext.Provider value={dispatch}>\n        {children}\n      </TractDispatchContext.Provider>\n    </TractStateContext.Provider>\n  );\n};\n\n// Custom hook for state\nconst useTractState = () => {\n  // Make sure we have the context\n  const context = useContext(TractStateContext);\n\n  if (context === undefined) {\n    throw new Error(`useTractState must be wrapped in a TractProvider`);\n  }\n\n  return context;\n};\n// Custom hook for dispatch\nconst useTractDispatch = () => {\n  // Make sure we have the context\n  const context = useContext(TractDispatchContext);\n\n  if (context === undefined) {\n    throw new Error(`useTractDispatch must be wrapped in a TractProvider`);\n  }\n\n  return context;\n};\n\n// Wrap both our custom hooks in a third\n// Some components might need both\nconst useTract = () => {\n  return [useTractState(), useTractDispatch()];\n};\n\n// HOC to wrap a component in the provider\nconst withProvider = WrappedComponent => {\n  return () => (\n    <TractProvider>\n      <WrappedComponent />\n    </TractProvider>\n  );\n};\nexport {\n  withProvider,\n  TractProvider,\n  useTractState,\n  useTractDispatch,\n  useTract,\n};\n","import React from 'react';\nimport { InputGroup, Row, Button, Form, Col } from 'react-bootstrap';\nimport Icon from '../Icon';\n\nimport { useTractDispatch } from '../state/context.provider';\nimport { delete_npri, update_npri } from '../state/actions';\n\nconst Npri = props => {\n  const { values, miId, onChange } = props;\n  const npriValues = values;\n\n  const dispatch = useTractDispatch();\n\n  // Because we want onChange to be called every time we make one\n  // We will wrap it in a function\n  const remove = (e, id, miId) => {\n    e.preventDefault();\n    dispatch(delete_npri({ miId, id }));\n    onChange();\n  };\n  const updateNpri = (e, npriId, miId) => {\n    e.preventDefault();\n    const { value, id } = e.target;\n    dispatch(update_npri({ miId, id: npriId, changes: { [id]: value } }));\n    onChange(e.target.value);\n  };\n  return (\n    <Form.Group\n      data-testid={`npri-${npriValues.id}`}\n      as={Row}\n      controlId=\"NPRIForm\"\n    >\n      <Col>\n        <InputGroup>\n          <InputGroup.Prepend>\n            <Icon icon=\"indent\" />\n          </InputGroup.Prepend>\n          <Form.Control\n            id=\"owner\"\n            value={npriValues.owner}\n            onChange={e => updateNpri(e, npriValues.id, miId)}\n          />\n        </InputGroup>\n      </Col>\n\n      <Col></Col>\n      <Col>\n        <InputGroup>\n          <Form.Control\n            id=\"interest\"\n            value={npriValues.interest}\n            onChange={e => updateNpri(e, npriValues.id, miId)}\n          />\n\n          <InputGroup.Append>\n            <InputGroup.Text id=\"NPRIPercent\">%</InputGroup.Text>\n          </InputGroup.Append>\n        </InputGroup>\n      </Col>\n      <Col></Col>\n      <Col xs={1}>\n        <Button\n          onClick={e => remove(e, npriValues.id, miId)}\n          data-testid={`npri-${npriValues.id}.remove`}\n          variant=\"light\"\n        >\n          <Icon icon=\"remove\" />\n        </Button>\n      </Col>\n    </Form.Group>\n  );\n};\n\nexport { Npri };\n","import React from 'react';\nimport { Form, Col, InputGroup, Button, Row } from 'react-bootstrap';\nimport Icon from '../Icon';\nimport { Npri } from './npri.component';\n\nimport { useTractDispatch } from '../state/context.provider';\nimport { add_npri, delete_mi, update_mi } from '../state/actions';\n\nconst MineralInterest = props => {\n  const { values, onChange } = props;\n  console.log(`values of MI : ${JSON.stringify(values)}`);\n  const miValues = values;\n  //const [miValues, setMiValues] = useState(values);\n  const dispatch = useTractDispatch();\n  console.log(`use state values: ${miValues}`);\n  const AddNPRI = (e, id) => {\n    e.preventDefault();\n    dispatch(add_npri({ id, data: { owner: '', interest: 0.0 } }));\n\n    //setMiValues(...miValues);\n    onChange();\n  };\n  const remove = (e, id) => {\n    e.preventDefault();\n    dispatch(delete_mi(id));\n    onChange();\n  };\n  const updateMi = (e, miId) => {\n    e.preventDefault();\n    const { value, id } = e.target;\n    dispatch(update_mi({ id: miId, changes: { [id]: value } }));\n    onChange();\n  };\n  // wrap the setMi in an onchange handler that calls both setMi and onchange.\n  return (\n    <Form data-testid={`mineralInterest-${miValues.id}`}>\n      <Form.Group as={Row} controlId={`MinernalInterest-${miValues.id}`}>\n        <Col>\n          <Form.Control\n            id=\"owner\"\n            value={miValues.owner}\n            onChange={e => updateMi(e, miValues.id)}\n          />\n        </Col>\n        <Col>\n          <InputGroup>\n            <Form.Control\n              id=\"interest\"\n              value={miValues.interest}\n              onChange={e => updateMi(e, miValues.id)}\n            />\n\n            <InputGroup.Append>\n              <InputGroup.Text id=\"MineralInterestPercent\">%</InputGroup.Text>\n            </InputGroup.Append>\n          </InputGroup>\n        </Col>\n        <Col></Col>\n        <Col>\n          <Form.Control\n            id=\"lease\"\n            value={miValues.lease}\n            onChange={e => updateMi(e, miValues.id)}\n          />\n        </Col>\n        <Col xs={1}>\n          <Button\n            data-testid={`mineralInterest-${miValues.id}.remove`}\n            onClick={e => remove(e, miValues.id)}\n            variant=\"light\"\n          >\n            <Icon icon=\"remove\" />\n          </Button>\n        </Col>\n      </Form.Group>\n\n      <RenderNPRIChildren\n        npris={miValues.npris}\n        miId={miValues.id}\n        onChange={onChange}\n      ></RenderNPRIChildren>\n      <Button variant=\"light\" onClick={e => AddNPRI(e, miValues.id)}>\n        <Icon icon=\"add\" />\n        Add NPRI\n      </Button>\n    </Form>\n  );\n};\n\nconst RenderNPRIChildren = ({ npris, miId, onChange }) => {\n  console.log(`mi Id: ${miId}, npris: ${JSON.stringify(npris, null, 2)}`);\n\n  return npris\n    ? npris.map(npri => (\n        <Npri\n          key={npri.id}\n          values={npri}\n          miId={miId}\n          onChange={onChange}\n        ></Npri>\n      ))\n    : null;\n};\nexport { MineralInterest };\n","import React from 'react';\nimport { Container, Row, Col, Button, Dropdown } from 'react-bootstrap';\nimport { MineralInterest } from '../components/mineralInterest.component';\nimport Icon from '../Icon';\nimport { useTract } from '../state/context.provider';\nimport { add_mi } from '../state/actions';\n\nconst EditTractOwnership = ({\n  value = [],\n  onChange = value => {\n    console.log(`on change called: `, value);\n  },\n}) => {\n  // Get and set state\n  const [state, dispatch] = useTract();\n  value = state;\n\n  // dispatch adding a material interest\n  const handleClick = e => {\n    e.preventDefault();\n    dispatch(add_mi({ owner: '', interest: 0, lease: '', npris: [] }));\n    onChange(value);\n  };\n\n  return (\n    <Container>\n      {/* TODO: make this its own component */}\n      <Row>\n        <Col>\n          <p>Owner</p>\n        </Col>\n        <Col>\n          <p>Mineral Interest</p>\n        </Col>\n        <Col>\n          <p>NPRI</p>\n        </Col>\n        <Col>\n          <p>Lease</p>\n        </Col>\n      </Row>\n      <Dropdown.Divider /> {/* Weird */}\n      <RenderTracts tracts={value} onChange={e => onChange(value)} />\n      <Button onClick={handleClick} variant=\"light\">\n        <Icon icon=\"add\" />\n        Add Mineral Interest\n      </Button>\n      <Dropdown.Divider />\n    </Container>\n  );\n};\n\nconst RenderTracts = props => {\n  const { tracts, onChange } = props;\n\n  return tracts.map(tract => {\n    return (\n      <MineralInterest\n        data-testid={`mineralInterest-${tract.id}`}\n        id={`mineralInterest-${tract.id}`}\n        key={tract.id}\n        values={tract}\n        onChange={onChange}\n      ></MineralInterest>\n    );\n  });\n};\n\nexport default EditTractOwnership;\n","/**\n * Basic error bounds from react's website\n */\n\nimport React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    console.error(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n","import React, { useEffect } from 'react';\nimport { Col, Container, Jumbotron, Row } from 'react-bootstrap';\nimport uuidv4 from 'uuid/v4';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\n\nimport EditTractOwnership from './EditTractOwnership';\nimport Icon from './Icon';\nimport { withProvider, useTract } from './state/context.provider';\nimport { set_state } from './state/actions';\nimport ErrorBoundary from './components/errorBounds.component';\n\nconst tractOwnerships = [\n  {\n    id: uuidv4(),\n    owner: 'Luke Skywalker',\n    interest: 0.5,\n    lease: 'Tatooine Lease',\n    npris: [\n      {\n        id: uuidv4(),\n        owner: 'Leia Organa',\n        interest: 0.45,\n      },\n      {\n        id: uuidv4(),\n        owner: 'Han Solo',\n        interest: 0.15,\n      },\n    ],\n  },\n];\n\nfunction App() {\n  const [dispatch] = useTract();\n\n  // On intial load fire set state\n  useEffect(() => {\n    dispatch(set_state(tractOwnerships));\n    // List dispatch as a dep because it will never change\n  }, [dispatch]);\n\n  return (\n    <ErrorBoundary>\n      <Container>\n        <Row>\n          <Col>\n            <Jumbotron>\n              <h1>\n                Landdox Code Challenge <Icon icon=\"smile\" />\n              </h1>\n            </Jumbotron>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <EditTractOwnership />\n          </Col>\n        </Row>\n      </Container>\n    </ErrorBoundary>\n  );\n}\n\nexport default withProvider(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}